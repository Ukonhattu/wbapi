{"version":3,"sources":["components/Chart.js","components/SearchButton.js","components/Sidebox.js","App.js","index.js"],"names":["Chart","_ref","values","isPerCapita","countries","range","_useState","useState","_useState2","Object","slicedToArray","crosshairValues","setCrosshairValues","dataArr","arr","i","length","push","map","p","x","year","y","Number","value","filter","start","end","onNearestX","index","react_default","a","createElement","es","onMouseLeave","margin","left","right","top","bottom","height","title","tickFormat","n","table","key","toString","getNull","data","color","RenderMultipleLineSeries","SearchButton","handleChange","search","handleCheckbox","checkboxDefault","reset","checkboxDisabled","handleRangeStart","handleRangeEnd","Form","Row","Col","Control","type","onChange","Button","onClick","variant","Label","Check","disabled","defaultChecked","label","Sidebox","handleRemove","TableItem","_ref2","style","country","list","Table","hover","App","setData","_useState3","_useState4","query","setQuery","_useState5","_useState6","url","setUrl","_useState7","_useState8","checkboxChecked","setCheckboxChecked","_useState9","_useState10","setCountries","_useState11","_useState12","setRange","useEffect","Axios","get","then","response","temp","undefined","str","hash","charCodeAt","colour","substr","stringToColor","className","components_SearchButton","event","target","preventDefault","baseUrl","components_Chart","components_Sidebox","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.24ed51ea.chunk.js","sourcesContent":["import {FlexibleXYPlot, XAxis, YAxis, VerticalGridLines, HorizontalGridLines,\n        LineSeries, Crosshair} from 'react-vis';\nimport '../../node_modules/react-vis/dist/style.css'\nimport React, { useState } from 'react';\n\nconst Chart = ({values, isPerCapita, countries, range}) => {\n    const [crosshairValues, setCrosshairValues] = useState([])\n    const dataArr = () => {\n      let arr = []\n      for (let i = 0; i < values.length; i++){\n        arr.push(values[i].map((p) => {\n          return {x: p.year, y: (isPerCapita ? Number(p.value) : Number(p.value)/1000 )    }\n        }).filter((p) => {return p.x >= range.start && p.x <= range.end}))\n    }\n      return arr\n    }\n    const onMouseLeave = () => {\n      setCrosshairValues([])\n    }\n\n\n  \n    const onNearestX = (value, index) => {\n      setCrosshairValues([value])\n    }\n    const RenderMultipleLineSeries = (n) => {\n      let table = []\n      for (let i = 0; i < n; i++) {\n        table.push(\n          <LineSeries\n          key = {i.toString()}\n          onNearestX = {onNearestX}\n          getNull={(p) => p.y !== 0 || p.x > 2100}\n          data={dataArr()[i]}\n          color = {countries[i].color}/>\n        )\n  \n      }\n  \n      return table\n    }\n    return (\n      <FlexibleXYPlot\n        onMouseLeave = {onMouseLeave}\n        margin = {{left: 50, right: 10, top: 10, bottom: 40}}\n        height={400}\n        >\n        <VerticalGridLines />\n        <HorizontalGridLines />\n        <XAxis \n        title = 'Year' \n        tickFormat = {(p) => {return p}}/>\n        <YAxis\n         title = 'Value'\n         tickFormat = {(p) => {return isPerCapita ? p : p + 'k'}}\n         />\n        {RenderMultipleLineSeries(dataArr().length)}\n        <Crosshair\n          values = {crosshairValues} />\n        </FlexibleXYPlot>\n    )\n  }\n\nexport default Chart;\n","import React from 'react'\nimport {Form, Button, Row, Col} from 'react-bootstrap'\n\nconst SearchButton = ({handleChange, search, handleCheckbox,\n                        checkboxDefault, reset, checkboxDisabled,\n                        handleRangeStart, handleRangeEnd, range}) => {\n  \n    return (\n      <Form>\n        <Row>\n            <Col>\n                <Form.Control \n                type = 'text'\n                onChange = {handleChange}\n                />\n            </Col>\n        </Row>\n        <Row>\n            <Col>\n                <Button onClick = {search} variant = 'primary' type = 'submit'>Add</Button>\n                <Button onClick = {reset} variant = 'danger'>Reset</Button>\n            </Col>\n            <Col>\n                <Form.Label>\n                    Range Start\n                </Form.Label>\n                <Form.Control\n                type = 'text'\n                onChange = {handleRangeStart}\n                value = {range.start}\n                />\n            </Col>\n            <Col>\n                <Form.Label>\n                    End\n                </Form.Label>\n                <Form.Control\n                type = 'text'\n                onChange = {handleRangeEnd}\n                value = {range.end}\n                />\n            </Col>\n        </Row>\n        <Form.Check\n            disabled = {checkboxDisabled}\n            type = 'checkbox'\n            onChange = {handleCheckbox}\n            defaultChecked = {checkboxDefault}\n            label = \"Per Capita\"\n        />\n            \n        \n      </Form>\n    )\n}\n\nexport default SearchButton;\n","import React from 'react'\nimport {Table, Button} from 'react-bootstrap'\n\nconst Sidebox = ({countries, handleRemove}) => {\n\n    const TableItem = ({value, i}) => {\n        return (\n            <tr>\n                <td style={{color: countries[i].color}} >{value.country}</td>\n                <td><Button variant= 'danger' onClick = {() => handleRemove(i)}>Remove</Button></td>\n        </tr>\n        )\n    }\n    const list = countries.map((p, i) => <TableItem key = {i.toString()} value = {p} i = {i}/>)\n    return (\n        <Table hover>\n        <thead>\n            <tr>\n                <th>Country name</th>\n            </tr>\n        </thead>\n        <tbody>\n        {list}\n        </tbody>\n        </Table>\n    \n    )}\n\nexport default Sidebox;","import React, { useState, useEffect } from 'react';\nimport Axios from 'axios'\nimport './App.css';\nimport Chart from './components/Chart'\nimport SearchButton from './components/SearchButton'\nimport Sidebox from './components/Sidebox'\nconst baseUrl = '/api'\n\nconst App = () => {\n  const [data, setData] = useState([])\n  const [query, setQuery] = useState('')\n  const [url, setUrl] = useState('-')\n  const [checkboxChecked, setCheckboxChecked] = useState(true)\n  const [countries, setCountries] = useState([])\n  const [range, setRange] = useState({start: 1960, end: 2017})\n\n\n  const search = (event) => {\n    event.preventDefault()\n    setUrl(baseUrl + '/co2/country/' + query +'/1960/2017/' + checkboxChecked)\n  }\n\n  const handleChange = (event) => {\n    setQuery(event.target.value)\n  }\n  const handlePerCapitaCheckbox = (event) => {\n    setCheckboxChecked(!checkboxChecked)\n  }\n\n  const reset = (event) => {\n    setData([])\n    setUrl('')\n    setCountries([])\n    setRange({start: 1960, end: 2017})\n  }\n\n  const handleSetRangeStart = (event) => {\n    setRange({start: event.target.value, end: range.end})\n  }\n\n  const handleSetRangeEnd = (event) => {\n    setRange({start: range.start, end: event.target.value})\n  }\n  const handleRemove = (i) => {\n    setData(data.filter((p, y) => i !== y ))\n    setCountries(countries.filter((p, y) => i !== y ))\n  }\n\n  const stringToColor = (str) => {\n    let hash = 0\n    for (let i = 0; i < str.length; i++) {\n        hash = str.charCodeAt(i) + ((hash << 5) - hash)\n    }\n    let colour = '#'\n    for (let i = 0; i < 3; i++) {\n        let value = (hash >> (i*8)) & 0xFF\n        colour += ('00' + value.toString(16)).substr(-2)\n    }\n    return colour\n}\n\n    useEffect(() => {\n      Axios\n      .get(url)\n      .then(response => {\n        let temp = []\n        for (let i = 0; i < data.length; i++) {\n          temp.push(data[i])\n        }\n        if (response.data['values'] !== undefined){ \n          temp.push(response.data['values'])\n          let country = {}\n          country.country = response.data['country']\n          country.color = stringToColor(response.data['country'])\n          countries.push(country)\n        }\n        setData(temp)\n      })\n    }, [url])\n  return(\n  <div className='container'>\n    <h1>WBApi CO2</h1>\n    <br/>\n    <SearchButton \n      handleChange = {handleChange}\n      search = {search}\n      handleCheckbox = {handlePerCapitaCheckbox}\n      checkboxDefault = {checkboxChecked}\n      reset = {reset} \n      //If there is some data, disable checkbox\n      checkboxDisabled = {data.length < 1 ? false : true}\n      handleRangeStart = {handleSetRangeStart}\n      handleRangeEnd = {handleSetRangeEnd}\n      range = {range}\n      />\n    <div>\n      <Chart\n        values = {data}\n        isPerCapita = {checkboxChecked}\n        countries = {countries}\n        range = {range}\n        />\n    </div>\n    <Sidebox \n      countries = {countries}\n      handleRemove = {handleRemove}\n    />\n    \n  </div>\n)}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}